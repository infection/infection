parameters:
	ignoreErrors:
		-
			message: "#^Call to static method Webmozart\\\\Assert\\\\Assert\\:\\:isInstanceOf\\(\\) with ReflectionClass\\<mixed\\> and 'ReflectionClass' will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/AutoReview/EnvVariableManipulation/EnvTestCasesProvider.php

		-
			message: "#^Call to static method Webmozart\\\\Assert\\\\Assert\\:\\:isInstanceOf\\(\\) with ReflectionClass\\<Infection\\\\Tests\\\\Console\\\\E2ETest\\> and 'ReflectionClass' will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/AutoReview/IntegrationGroup/IntegrationGroupProvider.php

		-
			message: "#^Call to static method Webmozart\\\\Assert\\\\Assert\\:\\:isInstanceOf\\(\\) with ReflectionClass\\<mixed\\> and 'ReflectionClass' will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/AutoReview/IntegrationGroup/IntegrationGroupProvider.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertTrue\\(\\) with true will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/AutoReview/Makefile/MakefileTest.php

		-
			message: "#^Short ternary operator is not allowed\\. Use null coalesce operator if applicable or consider using long ternary\\.$#"
			count: 1
			path: ../tests/phpunit/AutoReview/Mutator/MutatorTest.php

		-
			message: "#^Call to static method Webmozart\\\\Assert\\\\Assert\\:\\:resource\\(\\) with resource will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Config/ValueProvider/BaseProviderTest.php

		-
			message: "#^Call to static method Infection\\\\Tests\\\\Configuration\\\\ConfigurationFactoryTest\\:\\:createValueForMinCoveredMsi\\(\\) with incorrect case\\: createValueForminCoveredMsi$#"
			count: 4
			path: ../tests/phpunit/Configuration/ConfigurationFactoryTest.php

		-
			message: "#^Variable \\$profile might not be defined\\.$#"
			count: 4
			path: ../tests/phpunit/Configuration/Schema/SchemaConfigurationFactoryTest.php

		-
			message: "#^Short ternary operator is not allowed\\. Use null coalesce operator if applicable or consider using long ternary\\.$#"
			count: 1
			path: ../tests/phpunit/Console/E2ETest.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertIsIterable\\(\\) with iterable\\<Infection\\\\TestFramework\\\\Coverage\\\\Trace\\> will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/ContainerTest.php

		-
			message: "#^Call to static method Webmozart\\\\Assert\\\\Assert\\:\\:notNull\\(\\) with Infection\\\\Tests\\\\EnvVariableManipulation\\\\EnvBackup and 'Attempted to…' will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/FileSystem/Finder/TestFrameworkFinderTest.php

		-
			message: "#^Variable method call on Infection\\\\Tests\\\\FileSystem\\\\Finder\\\\MockVendor\\.$#"
			count: 1
			path: ../tests/phpunit/FileSystem/Finder/TestFrameworkFinderTest.php

		-
			message: "#^Call to static method Webmozart\\\\Assert\\\\Assert\\:\\:notNull\\(\\) with Infection\\\\Tests\\\\EnvVariableManipulation\\\\EnvBackup and 'Attempted to…' will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Logger/BadgeLoggerTest.php

		-
			message: "#^Call to static method Webmozart\\\\Assert\\\\Mixin\\:\\:allString\\(\\) with array\\<string\\> will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/EnvVariableManipulation/EnvBackup.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'Infection\\\\\\\\Event\\\\\\\\ApplicationExecutionWasFinished' and Infection\\\\Event\\\\ApplicationExecutionWasFinished will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Event/ApplicationExecutionWasFinishedTest.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'Infection\\\\\\\\Event\\\\\\\\ApplicationExecutionWasStarted' and Infection\\\\Event\\\\ApplicationExecutionWasStarted will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Event/ApplicationExecutionWasStartedTest.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'Infection\\\\\\\\Event\\\\\\\\InitialTestCaseWasCompleted' and Infection\\\\Event\\\\InitialTestCaseWasCompleted will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Event/InitialTestCaseWasCompletedTest.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'Infection\\\\\\\\Event\\\\\\\\InitialTestSuiteWasStarted' and Infection\\\\Event\\\\InitialTestSuiteWasStarted will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Event/InitialTestSuiteWasStartedTest.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'Infection\\\\\\\\Event\\\\\\\\MutableFileWasProcessed' and Infection\\\\Event\\\\MutableFileWasProcessed will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Event/MutableFileWasProcessedTest.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'Infection\\\\\\\\Event\\\\\\\\MutationGenerationWasFinished' and Infection\\\\Event\\\\MutationGenerationWasFinished will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Event/MutationGenerationWasFinishedTest.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'Infection\\\\\\\\Event\\\\\\\\MutationTestingWasFinished' and Infection\\\\Event\\\\MutationTestingWasFinished will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Event/MutationTestingWasFinishedTest.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'Infection\\\\\\\\FileSystem\\\\\\\\Finder\\\\\\\\Exception\\\\\\\\FinderException' and Infection\\\\FileSystem\\\\Finder\\\\Exception\\\\FinderException will always evaluate to true\\.$#"
			count: 4
			path: ../tests/phpunit/FileSystem/Finder/Exception/FinderExceptionTest.php

		-
			message: "#^Call to static method Webmozart\\\\Assert\\\\Assert\\:\\:string\\(\\) with string will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Logger/DummyLogger.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'Infection\\\\\\\\Mutation\\\\\\\\Mutation' and Infection\\\\Mutation\\\\Mutation will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Mutation/FileMutationGeneratorTest.php

		-
			message: "#^Call to static method Webmozart\\\\Assert\\\\Assert\\:\\:string\\(\\) with string will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Mutator/BaseMutatorTestCase.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'Infection\\\\\\\\Mutator\\\\\\\\Mutator' and Infection\\\\Mutator\\\\Mutator will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Mutator/MutatorFactoryTest.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertIsArray\\(\\) with array will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Mutator/MutatorResolverTest.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'PhpParser\\\\\\\\Node' and PhpParser\\\\Node will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/PhpParser/FileParserTest.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertNotFalse\\(\\) with string will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/PhpParser/FileParserTest.php

		-
			message: "#^Short ternary operator is not allowed\\. Use null coalesce operator if applicable or consider using long ternary\\.$#"
			count: 1
			path: ../tests/phpunit/PhpParser/Visitor/ReflectionVisitorTest.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'Infection\\\\\\\\Event\\\\\\\\MutantProcessWasFinished' and false will always evaluate to false\\.$#"
			count: 1
			path: ../tests/phpunit/Process/Factory/MutantProcessFactoryTest.php

		-
			message: "#^Instanceof between Infection\\\\Event\\\\MutationTestingWasFinished\\|Infection\\\\Event\\\\MutationTestingWasStarted and class\\-string will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/Process/Runner/MutationTestingRunnerTest.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'Infection\\\\\\\\TestFramework\\\\\\\\Coverage\\\\\\\\JUnit\\\\\\\\TestFileNameNotFoundException' and Infection\\\\TestFramework\\\\Coverage\\\\JUnit\\\\TestFileNameNotFoundException will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/TestFramework/Coverage/JUnit/TestFileNameNotFoundExceptionTest.php

		-
			message: "#^Short ternary operator is not allowed\\. Use null coalesce operator if applicable or consider using long ternary\\.$#"
			count: 1
			path: ../tests/phpunit/TestFramework/PhpUnit/Config/Builder/InitialConfigBuilderTest.php

		-
			message: "#^Short ternary operator is not allowed\\. Use null coalesce operator if applicable or consider using long ternary\\.$#"
			count: 1
			path: ../tests/phpunit/TestFramework/PhpUnit/Config/Builder/MutationConfigBuilderTest.php

		-
			message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) with 'DOMDocument' and DOMDocument will always evaluate to true\\.$#"
			count: 1
			path: ../tests/phpunit/TestFramework/SafeDOMXPathTest.php

