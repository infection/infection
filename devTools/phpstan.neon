includes:
    - ../vendor/phpstan/phpstan/conf/bleedingEdge.neon
    - phpstan-baseline.neon

rules:
    - Infection\DevTools\PHPStan\Rules\InfectionContainerRule

parameters:
    tmpDir: ../build/cache/phpstan-src
    inferPrivatePropertyTypeFromConstructor: true
    sidzIgnoreMagicNumbers: [0, 0.0, 1, -1, 1.0, -1.0, 100]
    sidzIgnoreNumericStrings: true
    parallel:
        processTimeout: 120.0
    ignoreErrors:
        - '#generic class ReflectionClass (but )?does not specify its types#'
        - '#^Parameter \#\d+ \$.+ \(.+\) of method .+ should be contravariant with parameter \$.+ \(.+\) of method .+$#'
        - '#^Short ternary operator is not allowed\. Use null coalesce operator if applicable or consider using long ternary\.$#'
        - '#^Dead catch - InvalidArgumentException is never thrown in the try block\.$#'
        - '#^Variable (method|property) (access|call) #'
        - '#^Call to internal method PHPUnit\\Framework\\TestCase\:\:addToAssertionCount\(\) from outside its root namespace PHPUnit\.$#'
        - '#^Call to.* method .*\(\) of internal class OndraM\\CiDetector\\TrinaryLogic from outside its root namespace OndraM\.$#'
        -
            path: '../src/Mutator/MutatorResolver.php'
            message: '#^Method Infection\\Mutator\\MutatorResolver::resolveSettings\(\) has parameter \$settings with no value type specified in iterable type array\.$#'
            count: 1
        -
            path: '../src/Logger/Html/StrykerHtmlReportBuilder.php'
            message: '#return type has no value type specified in iterable type array#'
        -
            path: '../src/Logger/Html/StrykerHtmlReportBuilder.php'
            message: '#return type with generic class ArrayObject does not specify its types\: TKey, TValue#'
        -
            message: "#^ArrayObject\\<\\*NEVER\\*, \\*NEVER\\*\\> does not accept array\\<string, array\\|string\\>\\.$#"
            count: 1
            path: ../src/Logger/Html/StrykerHtmlReportBuilder.php

        -
            message: "#^Generator expects value type list\\<PhpParser\\\\Node\\\\Stmt\\>, array\\<PhpParser\\\\Node\\\\Stmt\\> given\\.$#"
            count: 1
            path: ../src/Mutator/Unwrap/UnwrapFinally.php

        -
            message: "#^Generator expects value type list\\<PhpParser\\\\Node\\\\Stmt\\>, non\\-empty\\-array\\<PhpParser\\\\Node\\\\Stmt\\> given\\.$#"
            count: 1
            path: ../src/Mutator/Unwrap/UnwrapFinally.php

        -
            message: "#^Method Infection\\\\TestFramework\\\\SafeDOMXPath\\:\\:query\\(\\) should return DOMNodeList\\<DOMElement\\> but returns DOMNodeList\\<DOMNode\\>\\.$#"
            count: 1
            path: ../src/TestFramework/SafeDOMXPath.php

        -
            message: "#Do not use magic number (.*)#"
            count: 5
            path: ../src/TestFramework/Coverage/JUnit/TestLocationBucketSorter.php

        -
            message: "#Do not use magic number (.*)#"
            count: 12
            path: ../src/Mutator/Extensions/MBString.php

        -
            message: "#Do not use magic number (.*)#"
            count: 8
            path: ../src/Mutator/Extensions/BCMath.php
        -
            identifier: arrayFilter.strict
        -
            identifier: shipmonk.deadMethod
            path: ../src/Testing
        # While it's not used yet, left for consistency as we have ending column passed and used
        -
            message: '#^Unused Infection\\Mutant\\MutantExecutionResult\:\:getOriginalStartingColumn$#'
            identifier: shipmonk.deadMethod
            count: 1
            path: ../src/Mutant/MutantExecutionResult.php

        # tests
        - '#Dynamic call to static method PHPUnit\\Framework\\.*::.*#'
        - '#Method Infection\\Tests\\.*::.*\(\) return type has no value type specified in iterable type iterable#'
        -
            message: '#Do not (use|return|assign) magic number (.)#'
            paths:
                - ../tests/*
        -
            message: "#^Instantiated class Infection\\\\Tests\\\\Fixtures\\\\Console\\\\FakeOutput not found\\.$#"
            count: 12
            path:  ../tests/*
        -
            message: '#^Call to method PHPUnit\\Framework\\Assert::assertNotFalse\(\) with SimpleXMLElement and ''Expected dumpedâ€¦'' will always evaluate to true\.$#'
            path: ../tests/*
        -
            message: '#^Call to method PHPUnit\\Framework\\Assert::assertNotFalse\(\) with string will always evaluate to true\.$#'
            path: ../tests/*
        -
            message: '#^Call to method PHPUnit\\Framework\\Assert::assertInstanceOf\(\) with ''[a-zA-Z\\]+'' and [a-zA-Z\\]+ will always evaluate to (false|true)\.$#'
            path: ../tests/*
        -
            message: '#^Call to static method Webmozart\\Assert\\[a-zA-Z]+::[a-zA-Z]+\(\) with .* will always evaluate to true\.$#'
            path: ../tests/*
        -
            message: '#^Comparison operation "\<" between int\<.*, .*\> and .* is always false\.$#'
            path: ../tests/*
        -
            message: '#Offset .*\\.* does not exist on array<class-string<.*>.*#'
            path: ../tests/*
        -
            message: '#Return type \((void|mixed)\) of method .*(Visitor|Traverser).* should be compatible with return type .* of method PhpParser\\Node.*#'
            path: ../tests/*
        -
            message: '#^Function ini_get is unsafe to use\. It can return FALSE instead of throwing an exception\. Please add ''use function Safe\\ini_get;'' at the beginning of the file to use the variant provided by the ''thecodingmachine/safe'' library\.$#'
            identifier: theCodingMachineSafe.function
            count: 2
            path: ../tests/phpunit/Process/OriginalPhpProcessTest.php
        -
            message: '#^Call to method PHPUnit\\Framework\\Assert\:\:assertTrue\(\) with true will always evaluate to true\.$#'
            count: 1
            path: ../tests/phpunit/Process/Runner/DryProcessRunnerTest.php
        -
            message: "#^PHPDoc tag @param for parameter \\$values contains unresolvable type\\.$#"
            count: 1
            path: ../tests/phpunit/MockedContainer.php
        -
            message: '#Call to function iterator_.* on a separate line has no effect#'
            path: ../tests/*
        -
            identifier: match.unhandled
            path: ../src/Console/OutputFormatter/DotFormatter.php
    level: 8
    paths:
        - ../src
        - ../tests/phpunit
        - ./PHPStan/
    excludePaths:
        - %currentWorkingDirectory%/src/FileSystem/DummyFileSystem.php
        - %currentWorkingDirectory%/src/CustomMutator/templates/__Name__.php
        - %currentWorkingDirectory%/src/CustomMutator/templates/__Name__Test.php
        - %currentWorkingDirectory%/tests/e2e/*
        - %currentWorkingDirectory%/tests/phpunit/Fixtures/*
        # Current PHPStan version doesn't support `array<int, callable<mixed>>` syntax (callable)
        - %currentWorkingDirectory%/tests/phpunit/WithConsecutive.php
    stubFiles:
        - phpstan.stub
    treatPhpDocTypesAsCertain: false
