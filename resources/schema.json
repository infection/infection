{
    "$schema": "https://json-schema.org/draft-07/schema#",
    "type": "object",
    "additionalProperties": false,
    "required": [
        "source"
    ],
    "properties": {
        "timeout": {
            "type": "number",
            "description": "The allowed timeout in seconds.",
            "minimum": "0"
        },
        "source": {
            "type": "object",
            "required": [
                "directories"
            ],
            "additionalProperties": false,
            "properties": {
                "directories": {
                    "type": "array",
                    "minItems": 1,
                    "description": "Contains all folders with source code you want to mutate.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                },
                "excludes": {
                    "type": "array",
                    "minItems": 1,
                    "description": "Contains all folders or files you want to exclude withing your source folders.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                }
            }
        },
        "logs": {
            "type": "object",
            "minProperties": 1,
            "additionalProperties": false,
            "properties": {
                "text": {
                    "type": "string",
                    "description": "Human readable text log file."
                },
                "summary": {
                    "type": "string",
                    "definition": "Summary log file, which display the amount of mutants per category, (Killed, Errored, Escaped, Timed Out & Not Covered). More intended for internal purposes."
                },
                "json": {
                    "type": "string",
                    "definition": "JSON log file, which contains information about all mutants, as well as the source and mutated code and test framework output. Useful for using on CI servers to be able to programmatically analyze it."
                },
                "debug": {
                    "type": "string",
                    "description": "Debug log file, which displays what mutations were found on what line, per category. More intended for internal purposes."
                },
                "perMutator": {
                    "type": "string",
                    "description": "Markdown file which will give a break-down of the effectiveness of each mutator."
                },
                "badge": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": ["branch"],
                    "properties": {
                        "branch": {
                            "type": "string",
                            "description": "Mutation score badge for your GitHub project."
                        }
                    }
                }
            }
        },
        "tmpDir": {
            "type": "string",
            "description": "Folder where Infection creates its configs, caches and other stuff."
        },
        "phpUnit": {
            "type": "object",
            "description": "PHPUnit additional settings.",
            "additionalProperties": false,
            "properties": {
                "configDir": {
                    "type": "string",
                    "description": "Path to directory containing PHPUnit configuration file."
                },
                "customPath": {
                    "type": "string",
                    "description": "Custom path to PHPUnit executable."
                }
            }
        },
        "ignoreMsiWithNoMutations": {
            "type": "boolean",
            "description": "Ignore MSI violations with zero mutations."
        },
        "minMsi": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Minimum Mutation Score Indicator (MSI) percentage value. Should be used in CI server."
        },
        "minCoveredMsi": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Minimum Covered Code Mutation Score Indicator (MSI) percentage value. Should be used in CI server."
        },
        "mutators": {
           "$ref": "mutators.json#/mutators"
        },
        "testFramework": {
            "type": "string",
            "description": "Sets the framework to use for testing. Defaults to phpunit.",
            "anyOf": [
                "phpunit",
                "phpspec",
                "codeception"
            ]
        },
        "bootstrap": {
            "type": "string",
            "description": "Use to specify a file to include as part of the startup to pre-configure the infection environment. Useful for adding custom autoloaders not included in composer."
        },
        "initialTestsPhpOptions": {
            "type": "string",
            "description": "Specify an additional php options for the initial test (e.g. enabling Xdebug). --initial-tests-php-options will override this option."
        },
        "testFrameworkOptions": {
            "type": "string",
            "description": "Specify an additional options to pass to the test framework (e.g. enabling Verbose Mode). --test-framework-options will override this option."
        }
    }
}
