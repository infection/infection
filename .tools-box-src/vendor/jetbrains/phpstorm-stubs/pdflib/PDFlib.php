<?php

use JetBrains\PhpStorm\Deprecated;

class PDFlib
{








public function activate_item($id) {}














#[Deprecated(" This function is deprecated since PDFlib version 6, use PDF_create_action() with type=Launch and PDF_create_annotation() with type=Link instead.")]
public function add_launchlink($llx, $lly, $urx, $ury, $filename) {}
















#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_create_action() with type=GoTo and PDF_create_annotation() with type=Link instead.')]
public function add_locallink($lowerleftx, $lowerlefty, $upperrightx, $upperrighty, $page, $dest) {}











public function add_nameddest($name, $optlist) {}


















#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_create_annotation() with type=Text instead.')]
public function add_note($llx, $lly, $urx, $ury, $contents, $title, $icon, $open) {}

















#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_create_action() with type=GoToR and PDF_create_annotation() with type=Link instead.')]
public function add_pdflink($bottom_left_x, $bottom_left_y, $up_right_x, $up_right_y, $filename, $page, $dest) {}














public function add_table_cell($table, $column, $row, $text, $optlist) {}












public function add_textflow($textflow, $text, $optlist) {}










public function add_thumbnail($image) {}















#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_create_action() with type=URI and PDF_create_annotation() with type=Link instead.')]
public function add_weblink($lowerleftx, $lowerlefty, $upperrightx, $upperrighty, $url) {}














public function arc($x, $y, $r, $alpha, $beta) {}














public function arcn($x, $y, $r, $alpha, $beta) {}



















#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_create_annotation() with type=FileAttachment instead.')]
public function attach_file($llx, $lly, $urx, $ury, $filename, $description, $author, $mimetype, $icon) {}












public function begin_document($filename, $optlist) {}

















public function begin_font($filename, $a, $b, $c, $d, $e, $f, $optlist) {}















public function begin_glyph($glyphname, $wx, $llx, $lly, $urx, $ury) {}











public function begin_item($tag, $optlist) {}










public function begin_layer($layer) {}












public function begin_page_ext($width, $height, $optlist) {}













#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_begin_page_ext() instead.')]
public function begin_page($width, $height) {}














public function begin_pattern($width, $height, $xstep, $ystep, $painttype) {}












public function begin_template_ext($width, $height, $optlist) {}











#[Deprecated('This function is deprecated since PDFlib version 7, use PDF_begin_template_ext() instead.')]
public function begin_template($width, $height) {}










public function circle($x, $y, $r) {}






public function clip() {}








public function close_image($image) {}










public function close_pdi_page($page) {}










#[Deprecated('This function is deprecated since PDFlib version 7, use PDF_close_pdi_document() instead.')]
public function close_pdi($doc) {}








#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_end_document() instead.')]
public function close() {}






public function closepath_fill_stroke() {}






public function closepath_stroke() {}






public function closepath() {}













public function concat($a, $b, $c, $d, $e, $f) {}








public function continue_text($text) {}









public function create_3dview($username, $optlist) {}









public function create_action($type, $optlist) {}













public function create_annotation($llx, $lly, $urx, $ury, $type, $optlist) {}









public function create_bookmark($text, $optlist) {}














public function create_field($llx, $lly, $urx, $ury, $name, $type, $optlist) {}









public function create_fieldgroup($name, $optlist) {}








public function create_gstate($optlist) {}










public function create_pvf($filename, $data, $optlist) {}









public function create_textflow($text, $optlist) {}













public function curveto($x1, $y1, $x2, $y2, $x3, $y3) {}









public function define_layer($name, $optlist) {}








public function delete_pvf($filename) {}









public function delete_table($table, $optlist) {}








public function delete_textflow($textflow) {}






public function delete() {}











public function encoding_set_char($encoding, $slot, $glyphname, $uv) {}








public function end_document($optlist) {}






public function end_font() {}






public function end_glyph() {}








public function end_item($id) {}






public function end_layer() {}








public function end_page_ext($optlist) {}






public function end_page($p) {}






public function end_pattern($p) {}






public function end_template($p) {}






public function endpath($p) {}











public function fill_imageblock($page, $blockname, $image, $optlist) {}











public function fill_pdfblock($page, $blockname, $contents, $optlist) {}






public function fill_stroke() {}











public function fill_textblock($page, $blockname, $text, $optlist) {}






public function fill() {}










public function findfont($fontname, $encoding, $embed) {}











public function fit_image($image, $x, $y, $optlist) {}











public function fit_pdi_page($page, $x, $y, $optlist) {}













public function fit_table($table, $llx, $lly, $urx, $ury, $optlist) {}













public function fit_textflow($textflow, $llx, $lly, $urx, $ury, $optlist) {}











public function fit_textline($text, $x, $y, $optlist) {}






public function get_apiname() {}






public function get_buffer() {}






public function get_errmsg() {}






public function get_errnum() {}






public function get_majorversion() {}






public function get_minorversion() {}









public function get_parameter($key, $modifier) {}











public function get_pdi_parameter($key, $doc, $page, $reserved) {}











public function get_pdi_value($key, $doc, $page, $reserved) {}









public function get_value($key, $modifier) {}










public function info_font($font, $keyword, $optlist) {}










public function info_matchbox($boxname, $num, $keyword) {}









public function info_table($table, $keyword) {}









public function info_textflow($textflow, $keyword) {}










public function info_textline($text, $keyword, $optlist) {}






public function initgraphics() {}









public function lineto($x, $y) {}









public function load_3ddata($filename, $optlist) {}










public function load_font($fontname, $encoding, $optlist) {}









public function load_iccprofile($profilename, $optlist) {}










public function load_image($imagetype, $filename, $optlist) {}








public function makespotcolor($spotname) {}









public function moveto($x, $y) {}













public function open_ccitt($filename, $width, $height, $BitReverse, $k, $Blackls1) {}








public function open_file($filename) {}











public function open_image_file($imagetype, $filename, $stringparam, $intparam) {}
















public function open_image($imagetype, $source, $data, $length, $width, $height, $components, $bpc, $params) {}








public function open_memory_image($image) {}









public function open_pdi_document($filename, $optlist) {}










public function open_pdi_page($doc, $pagenumber, $optlist) {}










public function open_pdi($filename, $optlist, $len) {}









public function pcos_get_number($doc, $path) {}










public function pcos_get_stream($doc, $optlist, $path) {}









public function pcos_get_string($doc, $path) {}











public function place_image($image, $x, $y, $scale) {}












public function place_pdi_page($page, $x, $y, $sx, $sy) {}










public function process_pdi($doc, $page, $optlist) {}











public function rect($x, $y, $width, $height) {}






public function restore($p) {}








public function resume_page($optlist) {}








public function rotate($phi) {}






public function save($p) {}









public function scale($sx, $sy) {}










public function set_border_color($red, $green, $blue) {}









public function set_border_dash($black, $white) {}









public function set_border_style($style, $width) {}








public function set_gstate($gstate) {}









public function set_info($key, $value) {}









public function set_layer_dependency($type, $optlist) {}









public function set_parameter($key, $value) {}









public function set_text_pos($x, $y) {}









public function set_value($key, $value) {}













public function setcolor($fstype, $colorspace, $c1, $c2, $c3, $c4) {}









public function setdash($b, $w) {}








public function setdashpattern($optlist) {}








public function setflat($flatness) {}









public function setfont($font, $fontsize) {}








public function setgray_fill($g) {}








public function setgray_stroke($g) {}








public function setgray($g) {}








public function setlinecap($linecap) {}








public function setlinejoin($value) {}








public function setlinewidth($width) {}













public function setmatrix($a, $b, $c, $d, $e, $f) {}








public function setmiterlimit($miter) {}










public function setrgbcolor_fill($red, $green, $blue) {}










public function setrgbcolor_stroke($red, $green, $blue) {}










public function setrgbcolor($red, $green, $blue) {}









public function shading_pattern($shading, $optlist) {}

















public function shading($shtype, $x0, $y0, $x1, $y1, $c1, $c2, $c3, $c4, $optlist) {}








public function shfill($shading) {}














public function show_boxed($text, $left, $top, $width, $height, $mode, $feature) {}










public function show_xy($text, $x, $y) {}








public function show($text) {}









public function skew($alpha, $beta) {}










public function stringwidth($text, $font, $fontsize) {}






public function stroke() {}








public function suspend_page($optlist) {}









public function translate($tx, $ty) {}








public function utf16_to_utf8($utf16string) {}









public function utf32_to_utf16($utf32string, $ordering) {}









public function utf8_to_utf16($utf8string, $ordering) {}
}










function PDF_activate_item($pdf, $id) {}















#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_create_action() with type=Launch and PDF_create_annotation() with type=Link instead.')]
function PDF_add_launchlink($pdf, $llx, $lly, $urx, $ury, $filename) {}

















#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_create_action() with type=GoTo and PDF_create_annotation() with type=Link instead.')]
function PDF_add_locallink($pdf, $lowerleftx, $lowerlefty, $upperrightx, $upperrighty, $page, $dest) {}












function PDF_add_nameddest($pdf, $name, $optlist) {}



















#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_create_annotation() with type=Text instead.')]
function PDF_add_note($pdf, $llx, $lly, $urx, $ury, $contents, $title, $icon, $open) {}


















#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_create_action() with type=GoToR and PDF_create_annotation() with type=Link instead.')]
function PDF_add_pdflink($pdf, $bottom_left_x, $bottom_left_y, $up_right_x, $up_right_y, $filename, $page, $dest) {}















function PDF_add_table_cell($pdf, $table, $column, $row, $text, $optlist) {}













function PDF_add_textflow($pdf, $textflow, $text, $optlist) {}











function PDF_add_thumbnail($pdf, $image) {}
















#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_create_action() with type=URI and PDF_create_annotation() with type=Link instead.')]
function PDF_add_weblink($pdf, $lowerleftx, $lowerlefty, $upperrightx, $upperrighty, $url) {}















function PDF_arc($pdf, $x, $y, $r, $alpha, $beta) {}















function PDF_arcn($pdf, $x, $y, $r, $alpha, $beta) {}




















#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_create_annotation() with type=FileAttachment instead.')]
function PDF_attach_file($pdf, $llx, $lly, $urx, $ury, $filename, $description, $author, $mimetype, $icon) {}













function PDF_begin_document($pdf, $filename, $optlist) {}


















function PDF_begin_font($pdf, $filename, $a, $b, $c, $d, $e, $f, $optlist) {}
















function PDF_begin_glyph($pdf, $glyphname, $wx, $llx, $lly, $urx, $ury) {}












function PDF_begin_item($pdf, $tag, $optlist) {}











function PDF_begin_layer($pdf, $layer) {}













function PDF_begin_page_ext($pdf, $width, $height, $optlist) {}













#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_begin_page_ext() instead.')]
function PDF_begin_page($pdf, $width, $height) {}















function PDF_begin_pattern($pdf, $width, $height, $xstep, $ystep, $painttype) {}













function PDF_begin_template_ext($pdf, $width, $height, $optlist) {}












#[Deprecated('This function is deprecated since PDFlib version 7, use PDF_begin_template_ext() instead.')]
function PDF_begin_template($pdf, $width, $height) {}












function PDF_circle($pdf, $x, $y, $r) {}









function PDF_clip($pdf) {}










function PDF_close_image($pdf, $image) {}











function PDF_close_pdi_page($pdf, $page) {}











#[Deprecated('This function is deprecated since PDFlib version 7, use PDF_close_pdi_document() instead.')]
function PDF_close_pdi($pdf, $doc) {}











#[Deprecated('This function is deprecated since PDFlib version 6, use PDF_end_document() instead.')]
function PDF_close($pdf) {}









function PDF_closepath_fill_stroke($pdf) {}









function PDF_closepath_stroke($pdf) {}









function PDF_closepath($pdf) {}















function PDF_concat($pdf, $a, $b, $c, $d, $e, $f) {}










function PDF_continue_text($pdf, $text) {}











function PDF_create_3dview($pdf, $username, $optlist) {}











function PDF_create_action($pdf, $type, $optlist) {}















function PDF_create_annotation($pdf, $llx, $lly, $urx, $ury, $type, $optlist) {}











function PDF_create_bookmark($pdf, $text, $optlist) {}
















function PDF_create_field($pdf, $llx, $lly, $urx, $ury, $name, $type, $optlist) {}











function PDF_create_fieldgroup($pdf, $name, $optlist) {}










function PDF_create_gstate($pdf, $optlist) {}












function PDF_create_pvf($pdf, $filename, $data, $optlist) {}











function PDF_create_textflow($pdf, $text, $optlist) {}















function PDF_curveto($pdf, $x1, $y1, $x2, $y2, $x3, $y3) {}











function PDF_define_layer($pdf, $name, $optlist) {}










function PDF_delete_pvf($pdf, $filename) {}










function PDF_delete_table($pdf, $table, $optlist) {}









function PDF_delete_textflow($pdf, $textflow) {}








function PDF_delete($pdf) {}












function PDF_encoding_set_char($pdf, $encoding, $slot, $glyphname, $uv) {}









function PDF_end_document($pdf, $optlist) {}








function PDF_end_font($pdf) {}








function PDF_end_glyph($pdf) {}









function PDF_end_item($pdf, $id) {}








function PDF_end_layer($pdf) {}









function PDF_end_page_ext($pdf, $optlist) {}








function PDF_end_page($p) {}








function PDF_end_pattern($p) {}








function PDF_end_template($p) {}








function PDF_endpath($p) {}












function PDF_fill_imageblock($pdf, $page, $blockname, $image, $optlist) {}












function PDF_fill_pdfblock($pdf, $page, $blockname, $contents, $optlist) {}








function PDF_fill_stroke($pdf) {}












function PDF_fill_textblock($pdf, $page, $blockname, $text, $optlist) {}








function PDF_fill($pdf) {}










function PDF_findfont($pdf, $fontname, $encoding, $embed) {}











function PDF_fit_image($pdf, $image, $x, $y, $optlist) {}











function PDF_fit_pdi_page($pdf, $page, $x, $y, $optlist) {}













function PDF_fit_table($pdf, $table, $llx, $lly, $urx, $ury, $optlist) {}













function PDF_fit_textflow($pdf, $textflow, $llx, $lly, $urx, $ury, $optlist) {}











function PDF_fit_textline($pdf, $text, $x, $y, $optlist) {}







function PDF_get_apiname($pdf) {}







function PDF_get_buffer($pdf) {}







function PDF_get_errmsg($pdf) {}







function PDF_get_errnum($pdf) {}





function PDF_get_majorversion() {}





function PDF_get_minorversion() {}









function PDF_get_parameter($pdf, $key, $modifier) {}











function PDF_get_pdi_parameter($pdf, $key, $doc, $page, $reserved) {}











function PDF_get_pdi_value($pdf, $key, $doc, $page, $reserved) {}









function PDF_get_value($pdf, $key, $modifier) {}










function PDF_info_font($pdf, $font, $keyword, $optlist) {}










function PDF_info_matchbox($pdf, $boxname, $num, $keyword) {}









function PDF_info_table($pdf, $table, $keyword) {}









function PDF_info_textflow($pdf, $textflow, $keyword) {}











function PDF_info_textline($pdf, $text, $keyword, $optlist) {}








function PDF_initgraphics($pdf) {}










function PDF_lineto($pdf, $x, $y) {}










function PDF_load_3ddata($pdf, $filename, $optlist) {}











function PDF_load_font($pdf, $fontname, $encoding, $optlist) {}










function PDF_load_iccprofile($pdf, $profilename, $optlist) {}











function PDF_load_image($pdf, $imagetype, $filename, $optlist) {}









function PDF_makespotcolor($pdf, $spotname) {}










function PDF_moveto($pdf, $x, $y) {}






function PDF_new() {}














function PDF_open_ccitt($pdf, $filename, $width, $height, $BitReverse, $k, $Blackls1) {}









function PDF_open_file($pdf, $filename) {}












function PDF_open_image_file($pdf, $imagetype, $filename, $stringparam, $intparam) {}

















function PDF_open_image($pdf, $imagetype, $source, $data, $length, $width, $height, $components, $bpc, $params) {}









function PDF_open_memory_image($pdf, $image) {}










function PDF_open_pdi_document($pdf, $filename, $optlist) {}











function PDF_open_pdi_page($pdf, $doc, $pagenumber, $optlist) {}











function PDF_open_pdi($pdf, $filename, $optlist, $len) {}










function PDF_pcos_get_number($pdf, $doc, $path) {}











function PDF_pcos_get_stream($pdf, $doc, $optlist, $path) {}










function PDF_pcos_get_string($pdf, $doc, $path) {}












function PDF_place_image($pdf, $image, $x, $y, $scale) {}













function PDF_place_pdi_page($pdf, $page, $x, $y, $sx, $sy) {}











function PDF_process_pdi($pdf, $doc, $page, $optlist) {}












function PDF_rect($pdf, $x, $y, $width, $height) {}








function PDF_restore($p) {}









function PDF_resume_page($pdf, $optlist) {}









function PDF_rotate($pdf, $phi) {}








function PDF_save($p) {}










function PDF_scale($pdf, $sx, $sy) {}











function PDF_set_border_color($pdf, $red, $green, $blue) {}










function PDF_set_border_dash($pdf, $black, $white) {}










function PDF_set_border_style($pdf, $style, $width) {}









function PDF_set_gstate($pdf, $gstate) {}










function PDF_set_info($pdf, $key, $value) {}










function PDF_set_layer_dependency($pdf, $type, $optlist) {}










function PDF_set_parameter($pdf, $key, $value) {}










function PDF_set_text_pos($pdf, $x, $y) {}










function PDF_set_value($pdf, $key, $value) {}














function PDF_setcolor($pdf, $fstype, $colorspace, $c1, $c2, $c3, $c4) {}










function PDF_setdash($pdf, $b, $w) {}









function PDF_setdashpattern($pdf, $optlist) {}









function PDF_setflat($pdf, $flatness) {}










function PDF_setfont($pdf, $font, $fontsize) {}









function PDF_setgray_fill($pdf, $g) {}









function PDF_setgray_stroke($pdf, $g) {}









function PDF_setgray($pdf, $g) {}









function PDF_setlinecap($pdf, $linecap) {}









function PDF_setlinejoin($pdf, $value) {}









function PDF_setlinewidth($pdf, $width) {}














function PDF_setmatrix($pdf, $a, $b, $c, $d, $e, $f) {}









function PDF_setmiterlimit($pdf, $miter) {}











function PDF_setrgbcolor_fill($pdf, $red, $green, $blue) {}











function PDF_setrgbcolor_stroke($pdf, $red, $green, $blue) {}











function PDF_setrgbcolor($pdf, $red, $green, $blue) {}










function PDF_shading_pattern($pdf, $shading, $optlist) {}


















function PDF_shading($pdf, $shtype, $x0, $y0, $x1, $y1, $c1, $c2, $c3, $c4, $optlist) {}









function PDF_shfill($pdf, $shading) {}















function PDF_show_boxed($pdf, $text, $left, $top, $width, $height, $mode, $feature) {}











function PDF_show_xy($pdf, $text, $x, $y) {}









function PDF_show($pdf, $text) {}










function PDF_skew($pdf, $alpha, $beta) {}











function PDF_stringwidth($pdf, $text, $font, $fontsize) {}








function PDF_stroke($p) {}









function PDF_suspend_page($pdf, $optlist) {}










function PDF_translate($pdf, $tx, $ty) {}









function PDF_utf16_to_utf8($pdf, $utf16string) {}










function PDF_utf32_to_utf16($pdf, $utf32string, $ordering) {}










function PDF_utf8_to_utf16($pdf, $utf8string, $ordering) {}
