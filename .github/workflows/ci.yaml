# yamllint disable rule:line-length
# yamllint disable rule:braces

name: Tests

on:
  pull_request:
  push:
    branches:
      - main
      - master

jobs:
  tests:
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-version: ['7.4']
        dependencies: ['']
        coverage-driver: [pcov, xdebug]
        e2e-runner: ['bin/infection']
        include:
          - { operating-system: 'windows-latest', php-version: '7.4', dependencies: '', coverage-driver: 'xdebug' }
          - { operating-system: 'ubuntu-latest', php-version: '7.4', dependencies: '', coverage-driver: 'pcov' }
          - { operating-system: 'ubuntu-latest', php-version: '8.0', dependencies: '--ignore-platform-req=php', coverage-driver: 'pcov', e2e-runner: 'build/infection.phar' }

    continue-on-error: ${{ matrix.php-version == '8.0' }}
    name: CI on ${{ matrix.operating-system }} with PHP ${{ matrix.php-version }}, using ${{ matrix.coverage-driver }} ${{ matrix.dependencies }} with ${{ matrix.e2e-runner }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: ${{ matrix.coverage-driver }}
          ini-values: memory_limit=512M
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('composer.*') }}-${{ matrix.dependencies }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('composer.*') }}-
            composer-${{ runner.os }}-${{ matrix.php-version }}-
            composer-${{ runner.os }}-
            composer-

      - name: Install dependencies
        run: |
          composer install --no-interaction --prefer-dist --no-progress ${{ matrix.dependencies }}

      - name: Run tests
        shell: bash
        run: |
          make test-unit

      - name: Run integration tests
        shell: bash
        run: |
          make test-unit PHPUNIT_GROUP=integration

      - name: Cache E2E tests dependencies
        if: runner.os == 'Windows'
        uses: actions/cache@v2
        with:
          path: tests/e2e/*/vendor
          key: e2e-vendor-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('tests/e2e/*/composer.json') }}-${{ matrix.dependencies }}
          restore-keys: |
            e2e-vendor-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('tests/e2e/*/composer.json') }}-
            e2e-vendor-${{ runner.os }}-${{ matrix.php-version }}-
            e2e-vendor-${{ runner.os }}-
            composer-

      - name: Install Composer dependencies for E2E tests
        shell: bash
        run: |
          ls tests/e2e/*/composer.json | xargs dirname |
             xargs -I{} composer --working-dir={} install --no-interaction --prefer-dist --no-progress ${{ matrix.dependencies }}

      - name: Run a subset of E2E tests
        if: runner.os == 'Windows'
        shell: bash
        run: |
          make test-e2e-phpunit PHP='phpdbg -qrr' E2E_PHPUNIT_GROUP=e2e BENCHMARK_SOURCES=

      - name: Install Linux dependencies for E2E tests
        if: runner.os != 'Windows'
        run: |
          sudo apt-get install -y --no-install-recommends expect

      - name: Run the whole set of E2E tests
        if: runner.os != 'Windows' && matrix.e2e-runner == 'bin/infection'
        env:
          TERM: xterm-256color
        run: |
          make test-e2e E2E_PHPUNIT_GROUP=e2e INFECTION=bin/infection BENCHMARK_SOURCES=

      - name: Run the whole set of E2E tests with prefixed PHAR
        if: runner.os != 'Windows' && matrix.e2e-runner != 'bin/infection' && matrix.php-version == '8.0'
        env:
          TERM: xterm-256color
        run: |
          make compile
          make test-e2e E2E_PHPUNIT_GROUP=e2e INFECTION=build/infection.phar BENCHMARK_SOURCES=
